# Copyright (c) 2013 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# GNU Makefile based on shared rules provided by the Native Client SDK.
# See README.Makefiles for more details.

VALID_TOOLCHAINS := glibc

NACL_SDK_ROOT ?= $(abspath $(CURDIR)/../../..)

TARGET = dlopen


include $(NACL_SDK_ROOT)/tools/common.mk


DEPS = nacl_io ppapi_cpp
LIBS = nacl_io ppapi_cpp ppapi dl pthread

dlopen_CFLAGS = -Wall
dlopen_SOURCES = dlopen.cc
eightball_CFLAGS = -Wall
eightball_SOURCES = eightball.cc
reverse_CFLAGS = -Wall
reverse_SOURCES = reverse.cc

# Build rules generated by macros from common.mk:

$(foreach dep,$(DEPS),$(eval $(call DEPEND_RULE,$(dep))))
$(foreach src,$(dlopen_SOURCES),$(eval $(call COMPILE_RULE,$(src),$(dlopen_CFLAGS))))
$(foreach src,$(eightball_SOURCES),$(eval $(call COMPILE_RULE,$(src),$(eightball_CFLAGS))))
$(foreach src,$(reverse_SOURCES),$(eval $(call COMPILE_RULE,$(src),$(reverse_CFLAGS))))

# The PNaCl workflow uses both an unstripped and finalized/stripped binary.
# On NaCl, only produce a stripped binary for Release configs (not Debug).
ifneq (,$(or $(findstring pnacl,$(TOOLCHAIN)),$(findstring Release,$(CONFIG))))
$(eval $(call LINK_RULE,dlopen_unstripped,$(dlopen_SOURCES),$(LIBS),$(DEPS)))
$(eval $(call STRIP_RULE,dlopen,dlopen_unstripped))
else
$(eval $(call LINK_RULE,dlopen,$(dlopen_SOURCES),$(LIBS),$(DEPS)))
endif
$(eval $(call SO_RULE,eightball,$(eightball_SOURCES)))
$(eval $(call SO_RULE,reverse,$(reverse_SOURCES),,,1))

$(eval $(call NMF_RULE,$(TARGET),))
